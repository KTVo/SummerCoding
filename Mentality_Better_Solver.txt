How to code like an expert:
1) Persistence - DON'T GIVE UP, KEEP TRYING DIFFERENT THINGS (DON'T BE AFRAID TO CHANGE APPROACH)
2) Don't be discourage by being stuck, it's part of the journey. Just do Part 1.
3) Look how other people did it or similar problems that you had done before.
4) Know data structures and when to use each of them.
5) Have Small Facts written on-hand. Like a reminder on what does this error mean OR commands for something.
6) Know the libraries available.
7) Google for solutions or errors. (Don't hesitate to GOOGLE! It's very productive)

talkpython.fm/episodes/show/203/beginners-and-experts-in-software-development



/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;

int findNumMM(int guess)
{
    const int numMM = 323;
    int max = 500;
    int min = 0;
    bool found = false;
    int cnt = 0;
    while(!found)
    {
        guess = (min+max)/2;
        
        cout<<endl<<"guess "<<cnt<<" = "<<guess<<endl;
        if(guess == numMM)
        {
            found = true;
            cout<<endl<<"YES! There are "<<numMM<<" M&Ms"<<endl;
            return numMM;
        }
        else if(guess > numMM)
        {
            max = guess--;
        }
        else
        {
            min = guess++;
        }
        
        cnt++;
    }
}

int binarySearch(const int val, const int *arr, const int sz)
{
    int index = -1;
    int min = 0;
    int max = sz-1;
    int mid;
    int cnt = 0;
    
    while(index==-1 && cnt < sz/2)
    {
        mid = (min+max)/2;
        
        cout<<"\n\nmid = "<<mid<<endl<<endl;
        if(arr[mid] == val)
        {
            index = mid;
        }
        else if(arr[mid] > val)
        {
            max = mid - 1;
        }
        else
        {
            min = mid + 1;
        }
        cnt++;
    }
    
    cout<<endl<<"cnt = "<<cnt<<endl<<endl;
    return index;
}

void results(const int val, const int *arr, const int sz)
{
    int indx = binarySearch(val, arr, sz);
    
    if(indx == -1)
        cout<<endl<<"Not Found."<<endl;
    else
        cout<<endl<<"Value "<<val<<" was found at "<<indx<<endl;
        
}

int main()
{
    findNumMM(45);
    return 0;
}
